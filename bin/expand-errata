#!/usr/bin/env bash

trap "exit 1" HUP INT QUIT TERM

set -e -u -o pipefail

CMD="$(basename $0)"
function usage {
    echo "Usage: ... | $CMD [-hnv]" 1>&2
    echo "-h        Print this help message." 1>&2
    echo "-n        Dry run. Don't execute commands." 1>&2
    echo "-v        Verbose. Print extra information if appropriate." 1>&2
}

BFLAG=
DRY_RUN=
VFLAG=
while getopts b:hnv\? OPTCHAR; do
    case $OPTCHAR in
        b)  BFLAG=1
            BVAL="$OPTARG";;
        h)  usage; exit 0;;
        n)  DRY_RUN=1;;
        v)  VFLAG=1;;
    esac
done

shift $(($OPTIND - 1))
#echo "$CMD: Remaining arguments are: $*"

case $# in
    0)  ;;
    *)  usage; exit 1;;
esac

echo "Combined errata for Benjamin C. Pierce's book
Programming Languages and Types.

This file includes all the errata referenced at
http://www.cis.upenn.edu/~bcpierce/tapl/errata.txt
and also includes references to Exercise errata
on the page where where the exercise is located.

Organized by page. Naively sorted within the page.

Text in square brackets lists the source, and
an indicator of the severity of the note. Following
Sumii,
    no mark denotes very trivial errors
    * denote trivial errors
    ** denote less trivial errors
Pierce groups errors by severity, and we attempt
to annotate these according to the Sumii style.


The first section of this file lists all the errors that I'm aware of in
the third printing of TAPL (errata for earlier printings are below).  If
you find one that's not listed here, please let me know!

---------

in the source code for the checkers: In the TmTimesFloat case of the "pr"
  function in syntax.ml in most of the checkers, the first occurrence of
  "printtm_ATerm false ctx t2" should be "printtm_ATerm false ctx t1".

in the source code for checkers involving exceptions: The eval1 function is
missing cases for reducting "try" statements.  Something like this should be
added:
  | TmTry(fi,v1,t2) when isval ctx v1 ->
      v1
  | TmTry(fi,TmError(_),t2) ->
      t2
  | TmTry(fi,t1,t2) ->
      let t1' = eval1 ctx t1 in
      TmTry(fi, t1', t2)

in the source code for checkers involving subtyping and polymorphism: The
TyAll case of the join function is wrong.  It reads:

  | (TyAll(tyX,tyS1,tyS2),TyAll(_,tyT1,tyT2)) ->
       if not(subtype ctx tyS1 tyT1 && subtype ctx tyT1 tyS1) then TyTop
       else
         let ctx' = addbinding ctx tyX (TyVarBind(tyT1)) in
         TyAll(tyX,tyS1,join ctx' tyT1 tyT2)

  The last line should read: TyAll(tyX,tyS1,join ctx' tyS2 tyT2).

-----------
"

gawk -i "$(dirname "$0")/pretty_loc.awk" -F '%' '
{
     text = gensub("\a([^\a])", "\n    \\1", "g", $5)
     text = gensub("\a", "\n", "g", text)

     print pretty_loc($1, $2, $3, $4) "\n    " text "\n\n"

}
'
